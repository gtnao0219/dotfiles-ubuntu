extends typescript

global !p
def parse_props(args):
	prop_names = []
	for line in args.split("\n"):
		arr = line.split(":")
		if len(arr) == 0:
			continue
		prop_names.append(arr[0].lstrip())
	return ', '.join(prop_names)
endglobal

snippet fc "FC"
import React from 'react'
import styled from 'styled-components'

type ${1:Name}Props = {
	${2:props}
}

export const ${1/\w+/$0/}: React.FC<${1/\w+/$0/}Props> = ({ `!p snip.rv = parse_props(t[2])` }) => {
  return <></>
}
endsnippet

snippet sc "StyledComponent"
const ${1:Name} = styled.div\`
  ${2:body}
\`
endsnippet

snippet state "useState hooks"
const [${1:state}, set${1/\w+/\u$0/}] = useState(${2:default_value})
endsnippet

snippet effect "useEffect hooks"
useEffect(() => {
	${1:body}
}, [${2:deps}])
endsnippet

snippet click "onClick"
onClick={(${1}) => { ${2:body} }}
endsnippet
